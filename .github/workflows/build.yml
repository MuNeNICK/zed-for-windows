name: Build Zed Nightly

on:
  schedule:
    - cron: "0 0 * * *" # Runs every night at midnight UTC
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Get latest Zed release tag
        id: get_latest_tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $latestTag = (gh release list -R zed-industries/zed -L 1 --json tagName -q '.[0].tagName')
          echo "Latest Zed release tag: $latestTag"
          echo "LATEST_TAG=$latestTag" >> $env:GITHUB_ENV

      - name: Get our latest release name
        id: get_our_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $ourLatestRelease = ""
          $releases = gh release list -L 1 --json name -q '.[].name'
          if ($releases) {
            $ourLatestRelease = $releases[0]
            echo "Our latest release: $ourLatestRelease"
            echo "OUR_LATEST_RELEASE=$ourLatestRelease" >> $env:GITHUB_ENV
          } else {
            echo "No releases found. Setting OUR_LATEST_RELEASE to empty string."
            echo "OUR_LATEST_RELEASE=" >> $env:GITHUB_ENV
          }

      - name: Compare and checkout if needed
        run: |
          if ("${{ env.OUR_LATEST_RELEASE }}" -eq "${{ env.LATEST_TAG }}") {
            echo "Our latest release matches Zed's latest tag. Exiting."
            exit 0
          } else {
            echo "Checking out Zed's latest tag: ${{ env.LATEST_TAG }}"
          }

      - name: Checkout Zed repository
        uses: actions/checkout@v3
        with:
          repository: zed-industries/zed
          ref: ${{ env.LATEST_TAG }}
          fetch-depth: 1

      - name: Set up for build
        run: |
          echo "Ready to build ${{ env.LATEST_TAG }}"

      - name: Install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasi

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: zed-release
          path: target/release/zed.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: zed-release
          path: zed-release

      - name: Zip the release artifact
        run: zip -r zed-windows.zip zed-release/*

      - name: Upload release build artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.LATEST_TAG }}
          tag_name: ${{ env.LATEST_TAG }}
          draft: false
          make_latest: true
          files: zed-windows.zip
