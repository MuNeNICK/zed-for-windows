name: Build Specific Zed Version
on:
  workflow_dispatch:
    inputs:
      zed_version:
        description: 'Zed version to build (e.g., v0.100.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Zed repository
        uses: actions/checkout@v3
        with:
          repository: zed-industries/zed
          ref: ${{ github.event.inputs.zed_version }}
          fetch-depth: 1

      - name: Set up for build
        run: |
          echo "Ready to build ${{ github.event.inputs.zed_version }}"

      - name: Install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasi

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: zed-release
          path: target/release/zed.exe

  create_installer:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout our repository
        uses: actions/checkout@v3

      - name: Download Zed build artifact
        uses: actions/download-artifact@v4
        with:
          name: zed-release
          path: zed-release

      - name: Update Inno Setup script version
        run: |
          $content = Get-Content -Path zed_setup.iss -Raw
          $newContent = $content -replace '#define MyAppVersion ".*"', '#define MyAppVersion "${{ github.event.inputs.zed_version }}"'
          $newContent | Set-Content -Path zed_setup.iss -NoNewline

      - name: Compile Setup Wizard
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: zed_setup.iss
          options: /O+

      - name: Upload Inno Setup Installer
        uses: actions/upload-artifact@v4
        with:
          name: zed-installer
          path: Output/ZedInstaller-${{ github.event.inputs.zed_version }}.exe

  release:
    needs: [build, create_installer]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Inno Setup Installer
        uses: actions/download-artifact@v4
        with:
          name: zed-installer
          path: zed-installer

      - name: Download non-installer executable
        uses: actions/download-artifact@v4
        with:
          name: zed-release
          path: zed-release

      - name: Zip the non-installer executable
        run: zip zed-${{ github.event.inputs.zed_version }}.zip zed-release/zed.exe

      - name: Upload release artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.zed_version }}
          tag_name: ${{ github.event.inputs.zed_version }}
          draft: false
          files: |
            zed-installer/ZedInstaller-${{ github.event.inputs.zed_version }}.exe
            zed-${{ github.event.inputs.zed_version }}.zip
